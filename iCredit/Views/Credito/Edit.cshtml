@model CrediAdmin.Models.credito

@{
    ViewBag.Title = "Edit";
}

<h2>Editar Credito</h2>
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    @*<div class="form-horizontal">*@
    <div class="form-inline">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CreditoId)
        @Html.HiddenFor(model => model.CreditoNro)
        @Html.HiddenFor(model => model.EmpresaId)
        <div class="row">
            <div class="form-group col-xs-2">
                @Html.LabelFor(model => model.Fecha, htmlAttributes: new { @class = "control-label" })
                @*<div class="col-md-10">*@
                @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
                @*</div>*@
            </div>

            <div class="form-group col-xs-5">
                @Html.LabelFor(model => model.ClienteId, "Cliente", htmlAttributes: new { @class = "control-label" })
                @*<div class="col-md-10">*@
                @Html.DropDownList("ClienteId", null, String.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClienteId, "", new { @class = "text-danger" })
                @*</div>*@
            </div>
        </div>

        <div class="row">
            <div class="form-group col-xs-2">
                @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "control-label" })
                @*<div class="col-md-10">*@
                @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
                @*</div>*@
            </div>

            <div class="form-group col-xs-2">
                @Html.LabelFor(model => model.Interes, htmlAttributes: new { @class = "control-label" })
                @*<div class="col-md-10">*@
                @Html.EditorFor(model => model.Interes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Interes, "", new { @class = "text-danger" })
                @*</div>*@
            </div>

            <div class="form-group col-xs-2">
                @Html.LabelFor(model => model.Meses, htmlAttributes: new { @class = "control-label" })
                @*<div class="col-md-10">*@
                @Html.EditorFor(model => model.Meses, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Meses, "", new { @class = "text-danger" })
                @*</div>*@
            </div>
            <div class="form-group col-xs-2">
                @Html.LabelFor(model => model.UsuarioId, "Cobrador", htmlAttributes: new { @class = "control-label" })
                @Html.DropDownList("UsuarioId", null, String.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UsuarioId, "", new { @class = "text-danger" })

            </div>

        </div>

        <div class="row">
            <div class="form-group col-xs-2">
                @Html.LabelFor(model => model.DivisionCreditoId, "Dividir En", htmlAttributes: new { @class = "control-label" })
                @Html.DropDownList("DivisionCreditoId", null, String.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DivisionCreditoId, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-xs-5">
                @Html.LabelFor(model => model.TipoCuotaId, "Tipo Cuota", htmlAttributes: new { @class = "control-label" })
                @*<div class="col-md-10">*@
                @Html.DropDownList("TipoCuotaId", null, String.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TipoCuotaId, "", new { @class = "text-danger" })
                @*</div>*@
            </div>

        </div>


        <div class="">

            <div class="form-group">
                @Html.LabelFor(model => model.Observacion, htmlAttributes: new { @class = "control-label" })
            </div>

        </div>

        <div class="row">
            <div class="form-group  col-xs-9">

                @Html.EditorFor(model => model.Observacion, new { htmlAttributes = new { @class = "form-control inputLargo" } })
                @Html.ValidationMessageFor(model => model.Observacion, "", new { @class = "text-danger" })

            </div>

        </div>

        <div class="">
            <div class="form-group">
                @Html.LabelFor(model => model.PrimCuota, htmlAttributes: new { @class = "control-label" })
                @*<div class="col-md-10">*@
                <div class="checkbox">
                    @Html.EditorFor(model => model.PrimCuota)
                    @Html.ValidationMessageFor(model => model.PrimCuota, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="">

            @*<div class="form-group">
                    @Html.LabelFor(model => model.InteresPrimCuota, htmlAttributes: new { @class = "control-label" })
                    <div class="checkbox">
                    @Html.EditorFor(model => model.InteresPrimCuota)
                    @Html.ValidationMessageFor(model => model.InteresPrimCuota, "", new { @class = "text-danger" })
                    </div>
                </div>*@
        </div>
        <div class="">
            <div class="form-group">
                @Html.LabelFor(model => model.CapitalFinalCredito, htmlAttributes: new { @class = "control-label" })

                <div class="checkbox">
                    @Html.EditorFor(model => model.CapitalFinalCredito)
                    @Html.ValidationMessageFor(model => model.CapitalFinalCredito, "", new { @class = "text-danger" })
                </div>

            </div>
        </div>
        @Html.HiddenFor(model => model.CreadoPor)
        @Html.HiddenFor(model => model.ModificadoPor)
        @Html.HiddenFor(model => model.FechaCreacion)
        @Html.HiddenFor(model => model.FechaModificacion)

        

        <div class="">
            <div class="form-group">
                <input type="submit" name="button" value="Calcular" class="btn btn-warning" />

            </div>

        </div>


        <h3>Cuotas</h3>
        <table class=" table table-striped" id="tbl">
            <tr>
                <th>Cuota Nro</th>
                <th>Fecha</th>
                <th>Abono a Capital</th>
                <th>Abono a Intereses</th>
                <th>Total Cuota</th>
                <th>Saldo</th>
            </tr>
            @{
    decimal? valorCuota = 0, sumaAbonoCapital = 0, sumaAbonoInteres = 0, sumaTotalCuota = 0, saldo=Model.Valor;
    foreach (var item in Model.cuota)
    {

        valorCuota = item.AbonoCapital + item.AbonoInteres;
        sumaAbonoCapital = sumaAbonoCapital + item.AbonoCapital;
        sumaAbonoInteres = sumaAbonoInteres + item.AbonoInteres;
        sumaTotalCuota = sumaTotalCuota + valorCuota;
        saldo = saldo - item.AbonoCapital;
        <tr>
            <td>
                @Html.DisplayFor(i => item.Numero)
            </td>
            <td>
                @Html.DisplayFor(i => item.Fecha)
            </td>
            <td>
                @Html.DisplayFor(i => item.AbonoCapital)
            </td>
            <td>

                @Html.DisplayFor(i => item.AbonoInteres)
            </td>
            <td>
                @String.Format("{0:C}", valorCuota)
            </td>
            <td>
                @String.Format("{0:C}", saldo)
            </td>
        </tr>
    }
    <tr>
        <th>Total</th>
        <th></th>
        <th>@String.Format("{0:C}", sumaAbonoCapital)</th>
        <th>@String.Format("{0:C}", sumaAbonoInteres)</th>
        <th>@String.Format("{0:C}", sumaTotalCuota)</th>
    </tr>
            }
        </table>

        <div class="">
            <div class="form-group">
                @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label" })
                @*<div class="col-md-10">*@
                <div class="checkbox">
                    @Html.EditorFor(model => model.Estado)
                    @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    
    <div class="">
        <div class="form-group">
            <input type="submit" name="button" value="Modificar Credito" class="btn btn-primary" />
            <input type="submit" name="button" value="Cancelar" class="btn btn-default" />
        </div>
    </div>

}

<div>
    @Html.ActionLink("Volver a la Lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
